import { useState, useEffect } from "react";
import { useRouter } from "next/router";
import dynamic from "next/dynamic";
import "leaflet/dist/leaflet.css";
import Map from "../components/Map";

export default function Results() {
  const router = useRouter();
  const { ip } = router.query;
  const [data, setData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [shodanData, setShodanData] = useState(null);

  // ... (keep the existing useEffect and fetchWhoisData functions)

  if (loading) return <div className="text-center text-white text-2xl font-bold p-20">Loading...</div>;
  if (error) return <div className="text-center text-red-500 text-2xl font-bold p-20">{error}</div>;
  if (!data || Object.keys(data).length === 0)
    return <div className="text-center text-red-500 text-2xl font-bold p-20">No data found.</div>;

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 to-blue-900 text-white font-sans">
      {/* Header */}
      <header className="bg-black bg-opacity-50 shadow-lg">
        <div className="container mx-auto flex justify-between items-center px-4 py-6">
          <h1 className="text-3xl font-bold text-blue-400">CyberSherlock</h1>
          <nav>
            <a href="/" className="hover:text-blue-400 transition duration-300 text-lg">
              Home
            </a>
          </nav>
        </div>
      </header>

      {/* Main Content */}
      <main className="container mx-auto p-4">
        {/* IP/Domain Overview */}
        <section className="mb-12 bg-white bg-opacity-10 rounded-xl shadow-2xl p-8 backdrop-filter backdrop-blur-lg">
          <h2 className="text-4xl font-bold mb-6 text-blue-300">{data.ip}</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            <div className="space-y-4">
              <InfoItem label="Country" value={data.location?.country} />
              <InfoItem label="City" value={data.location?.city} />
              <InfoItem label="ISP" value={data.isp} />
              <InfoItem label="Organization" value={data.org} />
              <InfoItem label="Region" value={data.region} />
            </div>
            <div className="space-y-4">
              <InfoItem label="ASN" value={data.asn} />
              <InfoItem label="Hostname" value={data.hostnames?.[0]} />
              <InfoItem label="Latitude" value={data.location?.lat} />
              <InfoItem label="Longitude" value={data.location?.lon} />
              <InfoItem label="Longitude" value={data.location?.lon} />
            </div>
          </div>
        </section>

        {/* Map Section */}
        <section className="mb-12 bg-white bg-opacity-10 rounded-xl shadow-2xl p-8 backdrop-filter backdrop-blur-lg">
          <h3 className="text-2xl font-bold mb-4 text-blue-300">Geolocation</h3>
          {shodanData?.latitude && shodanData?.longitude ? (
            <div className="h-96 rounded-lg overflow-hidden">
              <Map
                coordinates={[shodanData.longitude, shodanData.latitude]}
                zoom={13}
              />
            </div>
          ) : (
            <p className="text-gray-400">Location data not available.</p>
          )}
        </section>

        {/* Security Insights */}
        <section className="mb-12 grid grid-cols-1 md:grid-cols-2 gap-8">
          <div className="bg-red-900 bg-opacity-50 rounded-xl shadow-2xl p-8 backdrop-filter backdrop-blur-lg">
            <h3 className="text-2xl font-bold mb-4 text-red-300">Security Insights</h3>
            <div className="space-y-4">
              <InfoItem label="Risk Score" value={data.riskScore} />
              <InfoItem label="Blacklisted" value={data.blacklisted ? "Yes" : "No"} />
              <InfoItem label="Open Ports" value={data.openPorts?.join(", ")} />
              <InfoItem label="Vulnerabilities" value={data.vulns?.length || 0} />
              <InfoItem label="OS" value={data.os} />
            </div>
          </div>
          <div className="bg-green-900 bg-opacity-50 rounded-xl shadow-2xl p-8 backdrop-filter backdrop-blur-lg">
            <h3 className="text-2xl font-bold mb-4 text-green-300">WHOIS Information</h3>
            <div className="space-y-4">
              <InfoItem label="Domain Owner" value={data.whois?.owner} />
              <InfoItem label="Registration Date" value={data.whois?.registrationDate} />
              <InfoItem label="Expiration Date" value={data.whois?.expirationDate} />
              <InfoItem label="Registrar" value={data.whois?.registrar} />
              <InfoItem label="Name Servers" value={data.whois?.nameServers?.join(", ")} />
            </div>
          </div>
        </section>

        {/* Technical Information */}
        {shodanData && (
          <section className="mb-12 bg-purple-900 bg-opacity-50 rounded-xl shadow-2xl p-8 backdrop-filter backdrop-blur-lg">
            <h3 className="text-2xl font-bold mb-6 text-purple-300">Technical Information</h3>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              <TechInfoCard
                title="SSL/TLS Security"
                icon={<LockIcon />}
                items={[
                  { label: "Protocol", value: shodanData.ssl?.version },
                  { label: "Heartbleed", value: shodanData.vulns?.includes('CVE-2014-0160') ? 'Vulnerable' : 'Not Vulnerable' },
                  { label: "POODLE", value: shodanData.vulns?.includes('CVE-2014-3566') ? 'Vulnerable' : 'Not Affected' },
                ]}
              />
              <TechInfoCard
                title="Security Headers"
                icon={<ShieldIcon />}
                items={[
                  { label: "HSTS", value: shodanData.http?.headers?.['Strict-Transport-Security'] ? 'Enabled' : 'Disabled' },
                  { label: "X-Content-Type-Options", value: shodanData.http?.headers?.['X-Content-Type-Options'] || 'Not set' },
                  { label: "X-Frame-Options", value: shodanData.http?.headers?.['X-Frame-Options'] || 'Not set' },
                ]}
              />
              <TechInfoCard
                title="Network Information"
                icon={<NetworkIcon />}
                items={[
                  { label: "ASN", value: shodanData.asn },
                  { label: "Anycast", value: shodanData.anycast ? 'Enabled' : 'Disabled' },
                  { label: "Domain", value: shodanData.domains?.[0] },
                ]}
              />
            </div>
          </section>
        )}

        {/* Historical Data */}
        <section className="mb-12 bg-indigo-900 bg-opacity-50 rounded-xl shadow-2xl p-8 backdrop-filter backdrop-blur-lg">
          <h3 className="text-2xl font-bold mb-6 text-indigo-300">Historical Data</h3>
          <div className="space-y-6">
            <HistoryItem
              color="blue"
              title="SSL Certificate Updated"
              date="2023-07-01 08:30:00 UTC"
            />
            <HistoryItem
              color="green"
              title="Security Policy Update"
              date="2023-06-15 14:45:00 UTC"
            />
            <HistoryItem
              color="yellow"
              title="DNS Configuration Change"
              date="2023-05-20 10:15:00 UTC"
            />
          </div>
        </section>

        {/* Related IPs */}
        <section className="mb-12 bg-gray-800 bg-opacity-50 rounded-xl shadow-2xl p-8 backdrop-filter backdrop-blur-lg">
          <h3 className="text-2xl font-bold mb-6 text-gray-300">Related IPs</h3>
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
            {shodanData?.relatedIPs?.map((ip, index) => (
              <div key={index} className="bg-gray-700 p-3 rounded-lg text-center hover:bg-gray-600 transition duration-300">
                <p className="text-sm text-white">{ip}</p>
              </div>
            ))}
          </div>
        </section>
      </main>

      {/* Footer */}
      <footer className="bg-black bg-opacity-50 py-6 text-center">
        <p className="text-gray-400">
          &copy; 2023 CyberSherlock. All rights reserved.{" "}
          <a href="#privacy-policy" className="text-blue-400 hover:underline">Privacy Policy</a>
        </p>
      </footer>
    </div>
  );
}

// Helper Components
const InfoItem = ({ label, value }) => (
  <p className="flex justify-between">
    <span className="font-semibold text-gray-300">{label}:</span>
    <span className="text-white">{value || "N/A"}</span>
  </p>
);

const TechInfoCard = ({ title, icon, items }) => (
  <div className="bg-white bg-opacity-10 p-6 rounded-lg">
    <h4 className="text-lg font-semibold mb-4 flex items-center">
      {icon}
      <span className="ml-2">{title}</span>
    </h4>
    <ul className="space-y-2">
      {items.map((item, index) => (
        <li key={index} className="flex justify-between text-sm">
          <span className="text-gray-300">{item.label}:</span>
          <span className={`font-semibold ${getValueColor(item.value)}`}>{item.value || "N/A"}</span>
        </li>
      ))}
    </ul>
  </div>
);

const HistoryItem = ({ color, title, date }) => (
  <div className="flex items-center">
    <div className={`w-4 h-4 bg-${color}-500 rounded-full mr-4`}></div>
    <div>
      <h4 className="text-lg font-semibold text-white">{title}</h4>
      <p className="text-sm text-gray-300">{date}</p>
    </div>
  </div>
);

// Icons
const LockIcon = () => (
  <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
  </svg>
);

const ShieldIcon = () => (
  <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
  </svg>
);

const NetworkIcon = () => (
  <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
  </svg>
);

// Helper function to determine the color of the value based on its content
const getValueColor = (value) => {
  if (typeof value === 'string') {
    if (value.toLowerCase().includes('vulnerable') || value.toLowerCase().includes('disabled')) {
      return 'text-red-400';
    } else if (value.toLowerCase().includes('not vulnerable') || value.toLowerCase().includes('enabled')) {
      return 'text-green-400';
    }
  }
  return 'text-white';
};

//text-center py-16 bg-gradient-to-b from-darkSecondary to-darkPrimary

<div className="flex  justify-center items-center gap-4">
<div className="relative mb-4">
  <button
    className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded focus:outline-none"
    onClick={() =>
      setInputType(inputType === "ip" ? "domain" : "ip")
    }
  >
    {inputType === "ip" ? "IP" : "Domain"}
  </button>
  <div className="absolute top-full mt-2 bg-gray-800 rounded shadow-lg">
    <ul>
      <li
        className="px-4 py-2 hover:bg-gray-700 cursor-pointer"
        onClick={() => setInputType("ip")}
      >
        IP
      </li>
      <li
        className="px-4 py-2 hover:bg-gray-700 cursor-pointer"
        onClick={() => setInputType("domain")}
      >
        Domain
      </li>
    </ul>
  </div>
</div>
<input
  type="text"
  placeholder={`Enter ${inputType}`}
  value={inputValue}
  onChange={(e) => setInputValue(e.target.value)}
  className="p-3 w-1/2 bg-darkSecondary border border-gray-600 rounded focus:outline-none focus:ring-2 focus:ring-accent text-sm"
/>
{error && <p className="text-red-500 mb-4">{error}</p>}
<button
  onClick={handleSearch}
  className="bg-accent text-white px-6 py-3 rounded hover:bg-blue-600 transition text-sm"
>
  Analyze Now
</button>
</div>


/* 
/* Input and Dropdown */
input {
  background-color: #4a5568; /* Lighter dark background */
  color: #ffffff;
  border: 1px solid #718096; /* Gray border */
  border-radius: 4px;
  padding: 8px;
}

input:focus {
  outline: none;
  border-color: #63b3ed; /* Accent color */
  box-shadow: 0 0 0 2px rgba(99, 179, 237, 0.5); /* Accent shadow */
}

button:focus {
  outline: none;
}



.relative:hover ul {
  display: block; /* Show dropdown on hover */
  position: absolute;
  z-index: 10;
  width: 100%;
}

.relative ul li {
  padding: 8px;
  cursor: pointer;
}

.relative ul li:hover {
  background-color: #2d3748; /* Darker background */
}

.relative:hover ul:hover {
  display: block; /* Keep dropdown visible when hovering over it */
}

.relative ul:hover {
  display: block; /* Prevent dropdown from hiding while hovering */
}

.relative:hover ul:not(:hover) {
  display: none; /* Hide dropdown when mouse moves off */
} 


<section id="features" className="bg-darkSecondary py-16">
<div className="container mx-auto px-4">
  <h3 className="text-2xl font-bold text-center mb-8 text-accent">
    Features
  </h3>
  <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
    <div className="bg-darkPrimary p-6 rounded shadow hover:shadow-lg transition">
      <h4 className="text-lg font-bold mb-2 text-accent">
        Geolocation
      </h4>
      <p className="text-sm">
        Pinpoint the exact location of IP addresses.
      </p>
    </div>
    <div className="bg-darkPrimary p-6 rounded shadow hover:shadow-lg transition">
      <h4 className="text-lg font-bold mb-2 text-accent">
        WHOIS Lookup
      </h4>
      <p className="text-sm">
        Retrieve domain registration information.
      </p>
    </div>
    <div className="bg-darkPrimary p-6 rounded shadow hover:shadow-lg transition">
      <h4 className="text-lg font-bold mb-2 text-accent">
        Security Analysis
      </h4>
      <p className="text-sm">
        Assess security risks and vulnerabilities.
      </p>
    </div>
    <div className="bg-darkPrimary p-6 rounded shadow hover:shadow-lg transition">
      <h4 className="text-lg font-bold mb-2 text-accent">
        Threat Detection
      </h4>
      <p className="text-sm">Identify vulnerabilities and risks.</p>
    </div>
  </div>
</div>
</section>

{/* Testimonials Section */}
<section id="testimonials" className="bg-darkPrimary py-16">
<div className="container mx-auto px-4">
  <h3 className="text-2xl font-bold text-center mb-8">
    Trusted by Security Professionals
  </h3>
  <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
    <div className="bg-darkSecondary p-6 rounded shadow">
      <p className="text-sm">
        "CyberSherlock has been a game-changer for our threat
        detection and IP analysis."
      </p>
      <h4 className="mt-4 font-bold text-sm">James Wilson</h4>
      <p className="text-xs text-gray-400">CEO, TechCorp</p>
    </div>
    <div className="bg-darkSecondary p-6 rounded shadow">
      <p className="text-sm">
        "The most comprehensive tool I've used for cybersecurity
        intelligence."
      </p>
      <h4 className="mt-4 font-bold text-sm">Sarah Chen</h4>
      <p className="text-xs text-gray-400">Security Analyst</p>
    </div>
    <div className="bg-darkSecondary p-6 rounded shadow">
      <p className="text-sm">
        "Essential for any business dealing with sensitive network
        data."
      </p>
      <h4 className="mt-4 font-bold text-sm">Michael Brown</h4>
      <p className="text-xs text-gray-400">IT Security Advisor</p>
    </div>
  </div>
</div>
</section>

{/* Certifications Section */}
<section id="certifications" className="bg-darkSecondary py-16">
<div className="container mx-auto px-4">
  <h3 className="text-2xl font-bold text-center mb-8">
    Security Certifications
  </h3>
  <div className="flex justify-center gap-8">
    <div className="bg-darkPrimary p-4 rounded shadow">
      <p className="text-center text-sm">ISO 27001</p>
    </div>
    <div className="bg-darkPrimary p-4 rounded shadow">
      <p className="text-center text-sm">SOC 2 Type II</p>
    </div>
    <div className="bg-darkPrimary p-4 rounded shadow">
      <p className="text-center text-sm">GDPR Compliant</p>
    </div>
  </div>
</div>
</section>



        {/* Technical Information Section */}
        {shodanData && (
          <section className="bg-gray-800 p-4 rounded shadow mb-8">
            <h3 className="text-lg font-semibold mb-2 text-accent">
              Technical Information
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <h4 className="text-sm font-bold text-accent">
                  SSL/TLS Security
                </h4>
                <p className="text-sm text-gray-400">
                  Protocol: {shodanData.ssl?.protocol || "N/A"}
                </p>
                <p className="text-sm text-gray-400">
                  Vulnerabilities:{" "}
                  {shodanData.ssl?.vulnerabilities?.join(", ") || "None"}
                </p>
                <p className="text-sm text-gray-400">
                  Cipher: {shodanData.ssl?.cipher || "N/A"}
                </p>
              </div>
              <div>
                <h4 className="text-sm font-bold text-accent">
                  Security Headers
                </h4>
                <p className="text-sm text-gray-400">
                  HSTS Enabled: {shodanData.headers?.hsts || "N/A"}
                </p>
                <p className="text-sm text-gray-400">
                  X-Content-Type-Options:{" "}
                  {shodanData.headers?.xContentType || "N/A"}
                </p>
                <p className="text-sm text-gray-400">
                  X-Frame-Options: {shodanData.headers?.xFrameOptions || "N/A"}
                </p>
              </div>
              <div>
                <h4 className="text-sm font-bold text-accent">
                  Network Information
                </h4>
                <p className="text-sm text-gray-400">
                  ASN: {shodanData.asn || "N/A"}
                </p>
                <p className="text-sm text-gray-400">
                  Organization: {shodanData.org || "N/A"}
                </p>
                <p className="text-sm text-gray-400">
                  ISP: {shodanData.isp || "N/A"}
                </p>
              </div>
              <div>
                <h4 className="text-sm font-bold text-accent">Open Ports</h4>
                {shodanData.ports?.length > 0 ? (
                  <ul className="list-disc list-inside text-sm text-gray-400">
                    {shodanData.ports.map((port, index) => (
                      <li key={index}>Port: {port}</li>
                    ))}
                  </ul>
                ) : (
                  <p className="text-sm text-gray-400">No open ports found.</p>
                )}
              </div>
              <div>
                <h4 className="text-sm font-bold text-accent">
                  Operating System
                </h4>
                <p className="text-sm text-gray-400">
                  OS: {shodanData.os || "N/A"}
                </p>
              </div>
              <div>
                <h4 className="text-sm font-bold text-accent">Hostnames</h4>
                {shodanData.hostnames?.length > 0 ? (
                  <ul className="list-disc list-inside text-sm text-gray-400">
                    {shodanData.hostnames.map((hostname, index) => (
                      <li key={index}>{hostname}</li>
                    ))}
                  </ul>
                ) : (
                  <p className="text-sm text-gray-400">No hostnames found.</p>
                )}
              </div>
            </div>
          </section>
        )}


        


{/* Technical Information Section */}
<section className="bg-gray-800 p-6 rounded-lg shadow-lg mb-8">
  <h3 className="text-2xl font-semibold mb-6 text-white">Technical Information</h3>
  <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
    <div className="bg-gradient-to-br from-blue-600 to-blue-800 p-4 rounded-lg shadow-md">
      <h4 className="text-lg font-semibold mb-3 text-white flex items-center">
        <svg className="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
        </svg>
        SSL/TLS Security
      </h4>
      <ul className="text-sm text-gray-200 space-y-2">
        <li className="flex justify-between">
          <span>Protocol:</span>
          <span className="font-semibold">{shodanData?.ssl?.version || 'TLS 1.3+'}</span>
        </li>
        <li className="flex justify-between">
          <span>Heartbleed:</span>
          <span className={`font-semibold ${shodanData?.vulns?.includes('CVE-2014-0160') ? 'text-red-400' : 'text-green-400'}`}>
            {shodanData?.vulns?.includes('CVE-2014-0160') ? 'Vulnerable' : 'Not Vulnerable'}
          </span>
        </li>
        <li className="flex justify-between">
          <span>POODLE:</span>
          <span className={`font-semibold ${shodanData?.vulns?.includes('CVE-2014-3566') ? 'text-red-400' : 'text-green-400'}`}>
            {shodanData?.vulns?.includes('CVE-2014-3566') ? 'Vulnerable' : 'TLS Not Affected'}
          </span>
        </li>
      </ul>
    </div>
    <div className="bg-gradient-to-br from-purple-600 to-purple-800 p-4 rounded-lg shadow-md">
      <h4 className="text-lg font-semibold mb-3 text-white flex items-center">
        <svg className="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
        </svg>
        Security Headers
      </h4>
      <ul className="text-sm text-gray-200 space-y-2">
        <li className="flex justify-between">
          <span>HSTS:</span>
          <span className={`font-semibold ${shodanData?.http?.headers?.['Strict-Transport-Security'] ? 'text-green-400' : 'text-red-400'}`}>
            {shodanData?.http?.headers?.['Strict-Transport-Security'] ? 'Enabled' : 'Disabled'}
          </span>
        </li>
        <li className="flex justify-between">
          <span>X-Content-Type-Options:</span>
          <span className="font-semibold">{shodanData?.http?.headers?.['X-Content-Type-Options'] || 'Not set'}</span>
        </li>
        <li className="flex justify-between">
          <span>X-Frame-Options:</span>
          <span className="font-semibold">{shodanData?.http?.headers?.['X-Frame-Options'] || 'Not set'}</span>
        </li>
      </ul>
    </div>
    <div className="bg-gradient-to-br from-green-600 to-green-800 p-4 rounded-lg shadow-md">
      <h4 className="text-lg font-semibold mb-3 text-white flex items-center">
        <svg className="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
        </svg>
        Network Information
      </h4>
      <ul className="text-sm text-gray-200 space-y-2">
        <li className="flex justify-between">
          <span>ASN:</span>
          <span className="font-semibold">{shodanData?.asn || 'N/A'}</span>
        </li>
        <li className="flex justify-between">
          <span>Anycast:</span>
          <span className={`font-semibold ${shodanData?.anycast ? 'text-green-400' : 'text-yellow-400'}`}>
            {shodanData?.anycast ? 'Enabled' : 'Disabled'}
          </span>
        </li>
        <li className="flex justify-between">
          <span>Domain:</span>
          <span className="font-semibold">{shodanData?.domains?.[0] || 'N/A'}</span>
        </li>
      </ul>
    </div>
  </div>
</section>
